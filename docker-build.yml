---
- hosts: client
  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true
    - name: Update apt and install docker-compose
      apt:
        name: docker-compose
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: login to docker image registry
      docker_login: 
        username: "theay003"
        password: "@theary@0312"
        reauthorize: yes

    - name: Build Docker Image for ubuntu
      docker_image:
        name: assignment1-ubuntu
        source: build 
        build: 
          path: "/root/ig/dockerfile_folder"
          dockerfile: "dockerfile_ubuntu"
          pull: yes 

    - name: Build Docker Image for debain
      docker_image:
        name: assignment1-debain
        source: build 
        build: 
          path: "/root/ig/dockerfile_folder"
          dockerfile: "dockerfile_debain"
          pull: yes 

    - name: Build Docker Image for centos
      docker_image:
        name: assignment1-centos
        source: build 
        build: 
          path: "/root/ig/dockerfile_folder"
          dockerfile: "dockerfile_centos"
          pull: yes 

    - name: start service
      docker_compose: 
        project_name: "assignment1-ig"
        recreate: always
        definition:
          version: '3.5'
          services:
            assignment1-ubuntu:
              container_name: "assignment1-ubuntu"
              image: "assignment1-ubuntu:latest"
              ports:
                - "80:80"
              restart: always

            assignment1-debain:
              container_name: "assignment1-debain"
              image: "assignment1-debain:latest"
              ports:
                - "81:80"
              restart: always

            assignment1-centos:
              container_name: "assignment1-centos"
              image: "assignment1-centos:latest"
              ports:
                - "82:80"
              restart: always
            